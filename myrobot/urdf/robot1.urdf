<?xml version="1.0"?>
<robot name="robot1">
<material name="white">
    <color rgba="1 1 1 1"/>
</material>
<material name="red">
    <color rgba="1 0 0 1"/>
</material>

<link name="base">


    <visual>
        <origin xyz="0.0 0.0 0.1" rpy="0.0 0.0 0.0"/>
        <geometry>
            <box size="0.8 0.6 0.1"/>
        </geometry>
        <material name="white"/>
        

    </visual>
    <collision>
        <geometry>
            
            <box size="0.8 0.6 0.1" />
           
        </geometry>
    </collision>
    <inertial>
        <mass value="10.0"/>
        <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
        <inertia ixx="0.15" ixy="0.0" ixz="0.0" iyy="0.15" iyz="0.0" izz="0.125"/>
    </inertial>

</link>
<link name="left_front_wheel">
    <visual>
    
        <geometry>
            <mesh filename="package://myrobot/meshes/wheelv2.stl" scale="0.01 0.01 0.01"/>
        </geometry>
        <material name="red"/>

    </visual>
    <collision>
        <geometry>
            
            
            <mesh filename="package://myrobot/meshes/wheelv2.stl" scale="0.01 0.01 0.01"/>
        </geometry>
    </collision>
    <inertial>
        <mass value="1.0"/>
        <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
        <inertia ixx="0.15" ixy="0.0" ixz="0.0" iyy="0.15" iyz="0.0" izz="0.125"/>
    </inertial>

</link>
<joint name="left_front_wheel_joint" type="continuous">
    <parent link="base"/>
    <child link="left_front_wheel"/>
    <origin xyz="0.2 0.37 0.1" rpy="0.0 0.0 0.0"/>
    <axis xyz="0 1 0"/>
</joint>
<link name="right_front_wheel">
    <visual>
    
        <geometry>
            <mesh filename="package://myrobot/meshes/wheelv2.stl" scale="0.01 0.01 0.01"/>
        </geometry>
        <material name="red"/>

    </visual>
    <collision>
        <geometry>
            
            
            <mesh filename="package://myrobot/meshes/wheelv2.stl" scale="0.01 0.01 0.01"/>
        </geometry>
    </collision>
    <inertial>
        <mass value="1.0"/>
        <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
        <inertia ixx="0.15" ixy="0.0" ixz="0.0" iyy="0.15" iyz="0.0" izz="0.125"/>
    </inertial>

</link>
<joint name="right_front_wheel_joint" type="continuous">
    <parent link="base"/>
    <child link="right_front_wheel"/>
    <origin xyz="0.2 -0.37 0.1" rpy="0.0 0.0 3.14"/>
    <axis xyz="0 -1 0"/>
</joint>
<link name="left_back_wheel">
    <visual>
    
        <geometry>
            <mesh filename="package://myrobot/meshes/wheelv2.stl" scale="0.01 0.01 0.01"/>
        </geometry>
        <material name="red"/>

    </visual>
    <collision>
        <geometry>
            
            
            <mesh filename="package://myrobot/meshes/wheelv2.stl" scale="0.01 0.01 0.01"/>
        </geometry>
    </collision>
    <inertial>
        <mass value="1.0"/>
        <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
        <inertia ixx="0.15" ixy="0.0" ixz="0.0" iyy="0.15" iyz="0.0" izz="0.125"/>
    </inertial>

</link>
<joint name="left_back_wheel_joint" type="continuous">
    <parent link="base"/>
    <child link="left_back_wheel"/>
    <origin xyz="-0.2 0.37 0.1" rpy="0.0 0.0 0.0"/>
    <axis xyz="0 1 0"/>
</joint>
<link name="right_back_wheel">
    <visual>
    
        <geometry>
            <mesh filename="package://myrobot/meshes/wheelv2.stl" scale="0.01 0.01 0.01"/>
        </geometry>
        <material name="red"/>

    </visual>
    <collision>
        <geometry>
            
            
            <mesh filename="package://myrobot/meshes/wheelv2.stl" scale="0.01 0.01 0.01"/>
        </geometry>
    </collision>
    <inertial>
        <mass value="1.0"/>
        <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
        <inertia ixx="0.15" ixy="0.0" ixz="0.0" iyy="0.15" iyz="0.0" izz="0.125"/>
    </inertial>

</link>
<joint name="right_back_wheel_joint" type="continuous">
    <parent link="base"/>
    <child link="right_back_wheel"/>
    <origin xyz="-0.2 -0.37 0.1" rpy="0.0 0.0 3.14"/>
    <axis xyz="0 -1 0"/>
</joint>
 <gazebo reference="base">
    <material>Gazebo/White</material>
</gazebo>
<gazebo reference="left_front_wheel">
    <material>Gazebo/Red</material>
</gazebo>
<gazebo reference="right_front_wheel">
    <material>Gazebo/Red</material>
</gazebo>
<gazebo reference="left_back_wheel">
    <material>Gazebo/Red</material>
</gazebo>
<gazebo reference="right_back_wheel">
    <material>Gazebo/Red</material>
</gazebo> 
<gazebo>
  <plugin name="differential_drive_controller" filename="libgazebo_ros_diff_drive.so">

    <!-- Plugin update rate in Hz -->
    <updateRate>10</updateRate>

    <!-- Name of left joint, defaults to `left_joint` -->
    <leftJoint>left_back_wheel_joint</leftJoint>

    <!-- Name of right joint, defaults to `right_joint` -->
    <rightJoint>right_back_wheel_joint</rightJoint>

    <!-- The distance from the center of one wheel to the other, in meters, defaults to 0.34 m -->
    <wheelSeparation>0.76</wheelSeparation>

    <!-- Diameter of the wheels, in meters, defaults to 0.15 m -->
    <wheelDiameter>0.5</wheelDiameter>

    <!-- Wheel acceleration, in rad/s^2, defaults to 0.0 rad/s^2 -->
    <wheelAcceleration>1.0</wheelAcceleration>

    <!-- Maximum torque which the wheels can produce, in Nm, defaults to 5 Nm -->
    <wheelTorque>20</wheelTorque>

    <!-- Topic to receive geometry_msgs/Twist message commands, defaults to `cmd_vel` -->
    <commandTopic>cmd_vel</commandTopic>

    <!-- Topic to publish nav_msgs/Odometry messages, defaults to `odom` -->
    <odometryTopic>odom</odometryTopic>

    <!-- Odometry frame, defaults to `odom` -->
    <odometryFrame>odom</odometryFrame>

    <!-- Robot frame to calculate odometry from, defaults to `base_footprint` -->
    <robotBaseFrame>base</robotBaseFrame>

    <!-- Odometry source, 0 for ENCODER, 1 for WORLD, defaults to WORLD -->
    <odometrySource>1</odometrySource>

    <!-- Set to true to publish transforms for the wheel links, defaults to false -->
    <publishWheelTF>true</publishWheelTF>

    <!-- Set to true to publish transforms for the odometry, defaults to true -->
    <publishOdom>true</publishOdom>

    <!-- Set to true to publish sensor_msgs/JointState on /joint_states for the wheel joints, defaults to false -->
    <publishWheelJointState>true</publishWheelJointState>

    <!-- Set to true to swap right and left wheels, defaults to true -->
    <legacyMode>false</legacyMode>
  </plugin>
</gazebo>

<gazebo>
  <plugin name="differential_drive_controller" filename="libgazebo_ros_diff_drive.so">

    <!-- Plugin update rate in Hz -->
    <updateRate>10</updateRate>

    <!-- Name of left joint, defaults to `left_joint` -->
    <leftJoint>left_front_wheel_joint</leftJoint>

    <!-- Name of right joint, defaults to `right_joint` -->
    <rightJoint>right_front_wheel_joint</rightJoint>

    <!-- The distance from the center of one wheel to the other, in meters, defaults to 0.34 m -->
    <wheelSeparation>0.76</wheelSeparation>

    <!-- Diameter of the wheels, in meters, defaults to 0.15 m -->
    <wheelDiameter>0.5</wheelDiameter>

    <!-- Wheel acceleration, in rad/s^2, defaults to 0.0 rad/s^2 -->
    <wheelAcceleration>1.0</wheelAcceleration>

    <!-- Maximum torque which the wheels can produce, in Nm, defaults to 5 Nm -->
    <wheelTorque>20</wheelTorque>

    <!-- Topic to receive geometry_msgs/Twist message commands, defaults to `cmd_vel` -->
    <commandTopic>cmd_vel</commandTopic>

    <!-- Topic to publish nav_msgs/Odometry messages, defaults to `odom` -->
    <odometryTopic>odom</odometryTopic>

    <!-- Odometry frame, defaults to `odom` -->
    <odometryFrame>odom</odometryFrame>

    <!-- Robot frame to calculate odometry from, defaults to `base_footprint` -->
    <robotBaseFrame>base</robotBaseFrame>

    <!-- Odometry source, 0 for ENCODER, 1 for WORLD, defaults to WORLD -->
    <odometrySource>1</odometrySource>

    <!-- Set to true to publish transforms for the wheel links, defaults to false -->
    <publishWheelTF>true</publishWheelTF>

    <!-- Set to true to publish transforms for the odometry, defaults to true -->
    <publishOdom>true</publishOdom>

    <!-- Set to true to publish sensor_msgs/JointState on /joint_states for the wheel joints, defaults to false -->
    <publishWheelJointState>true</publishWheelJointState>

    <!-- Set to true to swap right and left wheels, defaults to true -->
    <legacyMode>false</legacyMode>
  </plugin>
</gazebo>
</robot>
